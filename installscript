#!/bin/bash

printf "${NORMAL}\n [ START ] Update & Upgrade"
starttime=$(date +%s)
trap '' 2
sudo apt -y update && sudo apt -y upgrade && sudo apt -y dist-upgrade
trap 2
endtime=$(date +%s)
printf " [ DONE ] Update & Upgrade ... %s seconds\n" "$((endtime - starttime))"

echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installation der nötigen Requirements"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
starttime=$(date +%s)
apps=(
    software-properties-common
    build-essential
    apt-transport-https
    git
    curl
    unzip
    libssl-dev
    ca-certificates
    ffmpeg
    youtube-dl
    neofetch
    htop
    ncdu
    ranger
)
trap '' 2
sudo apt -y install "${apps[@]}"
trap 2
unset apps
endtime=$(date +%s)
printf " [ DONE ] common requirements ... %s seconds\n" "$((endtime - starttime))"

echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}PHP Installation"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
printf "\n Installieren? (j/n) "
read -p 'Antwort: '  reply

if [[ $reply =~ ^[Jj]$ ]]
then
    echo " ${GREEN}++++++++++++++++++++++++++++++"
    echo " ${RED}Installiere PHP 8"
    echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
    sudo add-apt-repository ppa:ondrej/php -y
    sudo apt update -y
    sudo apt install php php-cli php-json php-common php-mysql php-zip php-gd php-imagick php-mbstring php-curl php-xml php-xmlrpc php-pear php-bcmath php-imap php7.4-opcache php-zip php-intl -y
    echo " ${GREEN}++++++++++++++++++++++++++++++"
    echo " ${RED}Installiere PHP 7.4"
    echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
    sudo apt install php7.4 -y
	sudo apt install php7.4-fpm php7.4-mysql php7.4-zip php7.4-gd php7.4-imagick php7.4-mbstring php7.4-curl php7.4-xml php7.4-xmlrpc php7.4-bcmath php7.4-imap php7.4-intl -y
    sudo update-alternatives --config php
fi

# Install python
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere Phython & PIP"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
sudo apt install python-minimal -y
sudo apt install python-pip -y
python --version
pip --version

# Install Misc
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere diverse Libs"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
sudo apt-get install gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget -y

# Install zsh
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere oh-my-zsh"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
sudo apt install zsh -y
sudo chsh -s /usr/bin/zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Install powerlevel10k
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere Powerlevel 10K"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k

# Install Powerline-Symbols
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere Powerline-Symbols"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
sudo apt-get install fontconfig -y
wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf
wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
mkdir -p  ~/.local/share/fonts/
mkdir -p ~/.config/fontconfig/conf.d/
mv PowerlineSymbols.otf ~/.local/share/fonts/
sudo fc-cache -vf ~/.local/share/fonts/
mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/

# Install zsh-autosuggestions
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere zsh-autosuggestions"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

# Install zsh-syntax-highlighting
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere zsh-syntax-highlighting"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

# Symlink zsh prefs
rm ~/.zshrc
ln -s ~/.dotfiles/shell/.wsl2 ~/.zshrc

# Symlink warp prefs
rm ~/.warprc
ln -s ~/.dotfiles/shell/.warprc ~/.warprc

#Copy WSL config
sudo cp ~/.dotfiles/shell/wsl.conf /etc/wsl.conf

# Install Composer
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere Composer"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
composer -V

# Install Laravel Installer
echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere Laravel Global Installer"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
composer global require laravel/installer

echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere Node, NPM"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates
curl -sL https://deb.nodesource.com/setup_17.x | sudo -E bash -
sudo apt install nodejs -y
nodejs -v

echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}Installiere globale NPM Packages"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
sudo npm i @vue/cli
sudo npm i @vue/cli-service-global
sudo npm install -g eslint
sudo npm install -g ffmpeg-progressbar-cli

echo " ${GREEN}++++++++++++++++++++++++++++++"
echo " ${RED}SSH"
echo " ${GREEN}++++++++++++++++++++++++++++++${WHITE}"
printf "\n SSH-Key generieren (j/n): "
read -r personalconfig
if [ -z "${personalconfig}" ] || [ "${personalconfig}" == j ] || [ "${personalconfig}" == J ]; then
    printf "\n Name (Default: Stephan Jess): "
    read -r username
    if [ -z "${username}" ]; then
        username="Stephan Jess"
        echo "$username"
    fi
    git config --global user.name "${username}"

    printf "\n E-Mail (Default: s.jess@novagraphix.de): "
    read -r email
    if [ -z "${email}" ]; then
        email="s.jess@novagraphix.de"
        echo "$email"
    fi
    git config --global user.email "${email}"

    if [ ! -d ~/.ssh ]; then
        ssh-keygen -t rsa -b 4096 -C "${email}"
    fi
fi
printf "\n SSH-Key generiert in Verzeichnis ~/.ssh\n"

printf "\n [ START ] Säubern"
starttime=$(date +%s)
trap '' 2
sudo apt -y autoremove && sudo apt -y autoclean && sudo apt -y clean
trap 2
endtime=$(date +%s)
printf " [ DONE ] Säubern ... %s Sekunden" "$((endtime - starttime))"
endtotaltime=$(date +%s)
printf "\n Komplette Ausführungszeit ... %s Sekunden" "$((endtotaltime - starttotaltime))\n"

echo "${GREEN}++++++++++++++++++++++++++++++"
echo '++++++++++++++++++++++++++++++'
echo 'Fertig! Jetzt nur noch Passwort eingeben und das Theme switched!'
echo 'Dies muss noch erledigt werden:'
echo "${RED}1. Installiere unter Windows den FiraCode patched font, zu finden im Verzeichnis ~/.dotfiles/misc${GREEN}"
echo '++++++++++++++++++++++++++++++'

# Change Shell
chsh -s $(which zsh)
zsh
source ~/.zshrc
